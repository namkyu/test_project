상속과 인터페이스 설계는 비지니스 처리에 주로 사용된다.

Annotation
 - 비지니스와는 무관하게 설계를 한다.
 - 어노테이션을 걸었다가 뺐다한다.
 - 메소드 실행 전, 실행 후에 로그 찍는 것

Animal를 상속하고 있는 Dog 클래스는 Animal이 구현하고 있는 코드를 가지고 있다고 생각하자.

http://localhost:8080/aaa.do?cmd=login&userId=namkyu&password=1111

 - main 클래스에서 해당 url을 받는다. (Mock 데이터 생성하여 테스트)
 - package를 지정하여 Action 어노테이션이 걸려 있는 class 파일 리스트 추출
 - 추출된 class 파일들 중 @Action("/aaa.do")를 찾아 내어 instance 생성한다.
 - @Action(value = "/aaa.do", criterion = "cmd") 어노테이션에 선언된 식별자 criterion의 value를 추출
 - 추출된 "cmd"를 이용하여 request 객체의 파라미터에서 cmd value를 추출 (login)
 - class에서 메소드를 리스트 추출 후 login 메소드를 탐색
 - login 메소드에서 getParameterAnnotations() 를 이용하여 PARAMETER 타입의 어노테이션 추출
 - 추출된 userId, password를 이용하여 request 객체에서 value를 얻어 온다.
 - login 메소드를 invoke할 때 매개변수로 파라미터 배열을 넘긴다.